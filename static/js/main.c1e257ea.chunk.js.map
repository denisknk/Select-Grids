{"version":3,"sources":["TableApp/Modal/ListItem.js","TableApp/Modal/ModalView.js","TableApp/Modal/Modal.js","TableApp/Table/TableBlock.js","TableApp/Table/TableView.js","TableApp/Table/Table.js","TableApp/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["ListItem","item","close","deleteFromHeader","addToHeader","className","icon","faLongArrowAltRight","onClick","faTimes","Modal","state","availableGrids","props","applyHandle","closeHandle","onInputChange","e","inputHandle","this","type","onChange","value","map","el","key","selectedItems","Component","setState","filter","includes","console","log","input","target","toLowerCase","showOnInput","match","ModalView","TableBlock","style","Table","modalIsOpen","handleClick","tableHeader","Math","random","ind","backgroundColor","color","fontSize","width","tableBlockWidt","users","tr","gridsToShow","usersObj","ID","Password","Email","Birthday","Phone","Country","toRemove","toAdd","createUsersMatrix","selected","i","user","elem","push","length","remove","add","TableView","Main","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c1e257ea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faLongArrowAltRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ListItem = ({ item, close, deleteFromHeader, addToHeader }) => {\r\n  return (\r\n    <div className=\"list_item_wrapper\">\r\n      {item}\r\n      {!close && (\r\n        <FontAwesomeIcon\r\n          icon={faLongArrowAltRight}\r\n          className=\"list_item_icon\"\r\n          onClick={() => addToHeader(item)}\r\n        />\r\n      )}\r\n      {close && (\r\n        <FontAwesomeIcon\r\n          icon={faTimes}\r\n          className=\"list_item_icon\"\r\n          onClick={() => deleteFromHeader(item)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { Component } from \"react\";\r\nimport \"./Modal.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ListItem from \"./ListItem.js\";\r\n\r\nclass Modal extends Component {\r\n  state = {\r\n    availableGrids: this.props.availableGrids,\r\n    // value: \"Search...\",\r\n  };\r\n  // handeDeleteClick = (e) => {\r\n  //   // deleteFromHeader\r\n  //   console.log(e);\r\n  // };\r\n  applyHandle = () => {\r\n    this.props.applyHandle();\r\n    this.props.closeHandle();\r\n  };\r\n  onInputChange = (e) => {\r\n    this.props.inputHandle(e);\r\n    // const input = e.target.value.toLowerCase();\r\n    // this.setState(() => ({\r\n    //   value: input,\r\n    // }));\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"modal_overlay\">\r\n        <div className=\"modal_wrapper\">\r\n          <div className=\"modal_header\">\r\n            <p className=\"header_title\">Select columns for the grid</p>\r\n            <FontAwesomeIcon\r\n              icon={faTimes}\r\n              className=\"times_icon\"\r\n              onClick={this.props.closeHandle}\r\n            />\r\n          </div>\r\n          <div className=\"modal_body\">\r\n            <div className=\"modal_body_left_wrapper\">\r\n              <form className=\"modal_body_left_input\">\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={this.onInputChange}\r\n                  value={this.state.value}\r\n                  // onfocus={(e) => \"\"}\r\n                />\r\n              </form>\r\n\r\n              <div className=\"modal_body_left\">\r\n                {this.props.availableGrids.map((el) => {\r\n                  // console.log(this.props.availableGrids);\r\n                  return (\r\n                    <ListItem\r\n                      item={el}\r\n                      close={false}\r\n                      key={el}\r\n                      addToHeader={this.props.addToHeader}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            <div className=\"modal_body_right_wrapper\">\r\n              <div className=\"modal_body_right\">\r\n                {this.props.selectedItems.map((el) => {\r\n                  return (\r\n                    <ListItem\r\n                      item={el}\r\n                      close={true}\r\n                      key={el}\r\n                      deleteFromHeader={this.props.deleteFromHeader}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal_footer\">\r\n            <button className=\"modal_footer_button\" onClick={this.applyHandle}>\r\n              Apply\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport ModalView from \"./ModalView.js\";\r\nclass Modal extends Component {\r\n  state = {\r\n    selectedItems: this.props.selectedItems,\r\n    availableGrids: this.props.availableGrids,\r\n  };\r\n\r\n  deleteFromHeader = (item) => {\r\n    this.setState(() => ({\r\n      selectedItems: this.state.selectedItems.filter((el) => {\r\n        return el !== item;\r\n      }),\r\n    }));\r\n    // this.props.deleteFromHeader(item);\r\n  };\r\n  addToHeader = (item) => {\r\n    const isInArray = this.state.selectedItems.includes(item);\r\n    if (!isInArray) {\r\n      this.setState(() => ({\r\n        selectedItems: [...this.state.selectedItems, item],\r\n      }));\r\n    }\r\n\r\n    // this.props.addToHeader(item);\r\n  };\r\n  applyHandle = () => {\r\n    console.log(this.state.selectedItems);\r\n    this.props.applyHandle(this.state.selectedItems);\r\n  };\r\n  inputHandle = (e) => {\r\n    const input = e.target.value.toLowerCase();\r\n    const showOnInput = this.props.availableGrids.filter((el) => {\r\n      return el.toLowerCase().match(input);\r\n    });\r\n    console.log(showOnInput);\r\n    this.setState(() => ({\r\n      availableGrids: showOnInput,\r\n    }));\r\n  };\r\n  render() {\r\n    return (\r\n      <ModalView\r\n        closeHandle={this.props.closeHandle}\r\n        availableGrids={this.state.availableGrids}\r\n        selectedItems={this.state.selectedItems}\r\n        deleteFromHeader={this.deleteFromHeader}\r\n        applyHandle={this.applyHandle}\r\n        addToHeader={this.addToHeader}\r\n        inputHandle={this.inputHandle}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\n\r\nconst TableBlock = ({ el, style }) => {\r\n  return (\r\n    <div className=\"table_block\" style={style}>\r\n      {el}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableBlock;\r\n","import React, { Component } from \"react\";\r\nimport \"./Table.css\";\r\nimport \"../../normalize.css\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport TableBlock from \"./TableBlock.js\";\r\n\r\nclass Table extends Component {\r\n  state = {\r\n    modalIsOpen: false,\r\n  };\r\n  handleClick = () => {\r\n    this.setState(() => ({\r\n      modalIsOpen: true,\r\n    }));\r\n  };\r\n\r\n  closeHandle = () => {\r\n    this.setState(() => ({\r\n      modalIsOpen: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"table_parent_wrapper\">\r\n        {this.state.modalIsOpen && (\r\n          <Modal\r\n            closeHandle={this.closeHandle}\r\n            availableGrids={this.props.availableGrids}\r\n            selectedItems={this.props.tableHeader}\r\n            deleteFromHeader={this.props.deleteFromHeader}\r\n            applyHandle={this.props.applyHandle}\r\n            addToHeader={this.props.addToHeader}\r\n          />\r\n        )}\r\n        <div className=\"header_wrapper\">\r\n          <p>User Table</p>\r\n          <button className=\"table_button\" onClick={this.handleClick}>\r\n            Select Grid Columns\r\n          </button>\r\n        </div>\r\n        <div className=\"table_wrapper\">\r\n          <div className=\"table_line\" key={Math.random()}>\r\n            {this.props.tableHeader.map((el, ind) => {\r\n              return (\r\n                <TableBlock\r\n                  key={Math.random()}\r\n                  el={el}\r\n                  style={{\r\n                    backgroundColor: \"rgb(2, 173, 139)\",\r\n                    color: \"#ffffff\",\r\n                    fontSize: \"1.25em\",\r\n                    width: this.props.tableBlockWidt,\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {this.props.users.map((tr, ind) => {\r\n            return (\r\n              <div className=\"table_line\" key={Math.random()}>\r\n                {tr.map((el) => {\r\n                  return (\r\n                    <TableBlock\r\n                      key={Math.random()}\r\n                      el={el}\r\n                      style={\r\n                        ind % 2 === 0\r\n                          ? {\r\n                              backgroundColor: \"#f7f7f7\",\r\n                              width: this.props.tableBlockWidt,\r\n                            }\r\n                          : {\r\n                              backgroundColor: \"#ededed\",\r\n                              width: this.props.tableBlockWidt,\r\n                            }\r\n                      }\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport TableView from \"./TableView.js\";\r\nclass Table extends Component {\r\n  state = {\r\n    tableBlockWidt: \"100%\",\r\n    tableHeader: [\"ID\", \"First Name\", \"Last Name\", \"Password\"],\r\n    availableGrids: [\r\n      \"ID\",\r\n      \"First Name\",\r\n      \"Last Name\",\r\n      \"Password\",\r\n      \"Email\",\r\n      \"Birthday\",\r\n      \"Phone\",\r\n      \"Country\",\r\n    ],\r\n    gridsToShow: [],\r\n    usersObj: [\r\n      {\r\n        ID: \"1\",\r\n        \"First Name\": \"Tony\",\r\n        \"Last Name\": \"Smith\",\r\n        Password: 123,\r\n        Email: \"tonysmith@gmail.com\",\r\n        Birthday: \"01.05.1996\",\r\n        Phone: \"+1809365498761\",\r\n        Country: \"USA\",\r\n      },\r\n      {\r\n        ID: \"2\",\r\n        \"First Name\": \"Gill\",\r\n        \"Last Name\": \"Lopes\",\r\n        Password: 321,\r\n        Email: \"gilllopes@gmail.com\",\r\n        Birthday: \"07.09.2000\",\r\n        Phone: \"+1589632547890\",\r\n        Country: \"Canada\",\r\n      },\r\n      {\r\n        ID: \"3\",\r\n        \"First Name\": \"Lily\",\r\n        \"Last Name\": \"Brock\",\r\n        Password: 132,\r\n        Email: \"lilybrock@gmail.com\",\r\n        Birthday: \"28.06.1995\",\r\n        Phone: \"+6103256984568\",\r\n        Country: \"Australia\",\r\n      },\r\n      {\r\n        ID: \"4\",\r\n        \"First Name\": \"Ava\",\r\n        \"Last Name\": \"Cohen\",\r\n        Password: 231,\r\n        Email: \"avacohen@gmail.com\",\r\n        Birthday: \"11.08.1997\",\r\n        Phone: \"+445698541268\",\r\n        Country: \"United Kingdom\",\r\n      },\r\n    ],\r\n    toRemove: [],\r\n    toAdd: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const gridsToShow = this.createUsersMatrix(this.state.tableHeader);\r\n    this.setState(() => ({\r\n      gridsToShow: gridsToShow,\r\n    }));\r\n  }\r\n  createUsersMatrix = (selected) => {\r\n    // console.log(\"selected\", selected);\r\n    const gridsToShow = [];\r\n    for (let i = 0; i < this.state.usersObj.length; i++) {\r\n      const user = [];\r\n      selected.map((elem) => {\r\n        return user.push(this.state.usersObj[i][elem]);\r\n      });\r\n      gridsToShow.push(user);\r\n    }\r\n    return gridsToShow;\r\n  };\r\n  deleteFromHeader = (remove) => {\r\n    this.state.toRemove.push(remove);\r\n  };\r\n  addToHeader = (add) => {\r\n    this.state.toAdd.push(add);\r\n  };\r\n  applyHandle = (selected) => {\r\n    const gridsToShow = this.createUsersMatrix(selected);\r\n    let width = \"\";\r\n    console.log(\"before if\", selected.length);\r\n    if (selected.length < 5 && selected.length > 1) {\r\n      width += 100 / (selected.length - 1);\r\n      width += \"%\";\r\n    }\r\n    if (selected.length <= 1) {\r\n      width = \"100%\";\r\n    }\r\n    if (selected.length > 4) {\r\n      width += 100 / selected.length + \"%\";\r\n    }\r\n    console.log(width);\r\n\r\n    this.setState(() => ({\r\n      tableHeader: selected,\r\n      gridsToShow: gridsToShow,\r\n      tableBlockWidt: width,\r\n    }));\r\n  };\r\n  render() {\r\n    return (\r\n      <TableView\r\n        tableHeader={this.state.tableHeader}\r\n        availableGrids={this.state.availableGrids}\r\n        deleteFromHeader={this.deleteFromHeader}\r\n        applyHandle={this.applyHandle}\r\n        addToHeader={this.addToHeader}\r\n        users={this.state.gridsToShow}\r\n        tableBlockWidt={this.state.tableBlockWidt}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"../Table/Table\";\r\nimport \"./Main.css\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return <Table />;\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./TableApp/Main/Main\";\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}